{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","setSelectedTodo","onClose","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","query","onSetQuery","todoStatus","onSetStatus","value","onChange","event","target","placeholder","toLowerCase","trim","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","useEffect","userId","href","email","name","App","allTodos","setAllTodos","isModalOpen","setIsModalOpen","setQuery","setTodoStatus","loadedTodos","a","visibleTodos","filter","includes","length","ReactDOM","render","document","getElementById"],"mappings":"2QAWaA,EAA4B,SAAC,GAAD,IACvCC,EADuC,EACvCA,MACAC,EAFuC,EAEvCA,aACAC,EAHuC,EAGvCA,gBACAC,EAJuC,EAIvCA,QAJuC,OAMvC,wBAAOC,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCACGJ,EAAMK,KAAI,SAAAC,GAAI,OACb,qBACE,UAAQ,OACRF,UAAU,GAFZ,UAKE,oBAAIA,UAAU,eAAd,SAA8BE,EAAKC,KACnC,oBAAIH,UAAU,eAAd,SACGE,EAAKE,WACJ,sBAAMJ,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAInB,oBAAIA,UAAU,2BAAd,SACE,mBAAGA,UAAWK,IAAW,CACvB,mBAAoBH,EAAKE,UACzB,mBAAoBF,EAAKE,YAF3B,SAKGF,EAAKI,UAGV,oBAAIN,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVO,KAAK,SACLC,QAAS,WACPV,EAAgBI,GAChBH,GAAQ,IANZ,SASE,sBAAMC,UAAU,OAAhB,SACE,mBAAGA,UAAWK,IAAW,MACvB,CACE,eAAgBR,IAAiBK,EACjC,SAAUL,IAAiBK,cAjChCA,EAAKC,aC9BPM,EAA8B,SAAC,GAAD,IACzCC,EADyC,EACzCA,MACAC,EAFyC,EAEzCA,WACAC,EAHyC,EAGzCA,WACAC,EAJyC,EAIzCA,YAJyC,OAMzC,uBAAMb,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRc,MAAOF,EACPG,SAAU,SAACC,GAAD,OAAWH,EAAYG,EAAMC,OAAOH,QAHhD,UAKE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAKN,oBAAGd,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRO,KAAK,OACLP,UAAU,QACVkB,YAAY,YACZJ,MAAOJ,EACPK,SAAU,SAACC,GAAD,OAAWL,EACnBK,EAAMC,OAAOH,MAAMK,cAAcC,WAGrC,sBAAMpB,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGbU,GACE,sBAAMV,UAAU,gBAAgBqB,MAAO,CAAEC,cAAe,OAAxD,SAEE,wBACE,UAAQ,oBACRf,KAAK,SACLP,UAAU,SACVQ,QAAS,WACPG,EAAW,IACXE,EAAY,mBChDfU,G,MAAmB,kBAC9B,qBAAKvB,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCOnB,SAASwB,EAAOC,GAEd,IARYC,EAQNC,EAVS,iEAUYF,EAAM,QAEjC,OAVYC,EAUA,IATL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OASnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,ICTMC,EAA6B,SAAC,GAIpC,IAHLjC,EAGI,EAHJA,KACAH,EAEI,EAFJA,QACAD,EACI,EADJA,gBAEA,EAAwBsC,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KAOA,OALAC,qBAAU,WDIW,IAACC,KCHZtC,EAAKsC,ODG0BhB,EAAG,iBAAiBgB,KCFxDT,KAAKO,KACP,IAGD,sBAAKtC,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEbqC,EAGA,sBAAKrC,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIYE,EAAKC,MAIjB,wBACEI,KAAK,SACLP,UAAU,SACV,UAAQ,cACRQ,QAAS,WACPT,GAAQ,GACRD,EAAgB,YAKtB,sBAAKE,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGE,EAAKI,QAGR,oBAAGN,UAAU,QAAQ,UAAQ,aAA7B,UAGIE,EAAKE,UACA,wBAAQJ,UAAU,mBAAlB,kBACA,wBAAQA,UAAU,kBAAlB,qBAGN,OAED,mBAAGyC,KAAI,iBAAYJ,EAAKK,OAAxB,SACGL,EAAKM,gBAvCd,cAAC,EAAD,QCjBKC,EAAgB,WAC3B,MAAgCR,mBAAiB,IAAjD,mBAAOS,EAAP,KAAiBC,EAAjB,KACA,EAAwCV,mBAAsB,MAA9D,mBAAOvC,EAAP,KAAqBC,EAArB,KACA,EAAsCsC,oBAAS,GAA/C,mBAAOW,EAAP,KAAoBC,EAApB,KACA,EAA0BZ,mBAAS,IAAnC,mBAAO1B,EAAP,KAAcuC,EAAd,KACA,EAAoCb,mBAAS,OAA7C,mBAAOxB,EAAP,KAAmBsC,EAAnB,KAEMC,EAAW,uCAAG,sBAAAC,EAAA,kEAClBN,EADkB,SFEQtB,EAAY,UEFpB,6EAAH,qDAIjBe,qBAAU,WACRY,MACC,IAEH,IAAME,EAAeR,EAClBS,QAAO,SAAApD,GAAI,OAAIA,EAAKI,MAAMa,cAAcoC,SAAS7C,MACjD4C,QAAO,SAAApD,GACN,OAAQU,GACN,IAAK,SACH,OAAQV,EAAKE,UACf,IAAK,YACH,OAAOF,EAAKE,UACd,QACE,OAAO,MAIf,OACE,qCACE,qBAAKJ,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACEU,MAAOA,EACPC,WAAYsC,EACZrC,WAAYA,EACZC,YAAaqC,MAIjB,sBAAKlD,UAAU,QAAf,UACuB,IAApB6C,EAASW,QACR,cAAC,EAAD,IAGF,cAAC,EAAD,CACE5D,MAAOyD,EACPxD,aAAcA,EACdC,gBAAiBA,EACjBC,QAASiD,cAMlBnD,GAAgBkD,GACf,cAAC,EAAD,CACE7C,KAAML,EACNC,gBAAiBA,EACjBC,QAASiD,QCxEnBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7b579074.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n  selectedTodo: Todo | null\n  setSelectedTodo: (todo: Todo | null) => void\n  onClose: (value: boolean) => void\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setSelectedTodo,\n  onClose,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className=\"\"\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={classNames({\n              'has-text-danger': !todo.completed,\n              'has-text-success': todo.completed,\n            })}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => {\n                setSelectedTodo(todo);\n                onClose(true);\n              }}\n            >\n              <span className=\"icon\">\n                <i className={classNames('far',\n                  {\n                    'fa-eye-slash': selectedTodo === todo,\n                    'fa-eye': selectedTodo !== todo,\n                  })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","type Props = {\n  query: string\n  todoStatus: string\n  onSetQuery: (value: string) => void\n  onSetStatus: (value: string) => void\n};\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  onSetQuery,\n  todoStatus,\n  onSetStatus,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={todoStatus}\n          onChange={(event) => onSetStatus(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => onSetQuery(\n          event.target.value.toLowerCase().trim(),\n        )}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n      {\n        query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                onSetQuery('');\n                onSetStatus('all');\n              }}\n            />\n          </span>\n        )\n      }\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  todo: Todo\n  setSelectedTodo: (todo: Todo | null) => void\n  onClose: (value: boolean) => void\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  onClose,\n  setSelectedTodo,\n}) => {\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    getUser(todo.userId)\n      .then(setUser);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                onClose(false);\n                setSelectedTodo(null);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {\n                todo.completed\n                  ? (<strong className=\"has-text-success\">Done</strong>)\n                  : (<strong className=\"has-text-danger\">Planned</strong>)\n              }\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [allTodos, setAllTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [query, setQuery] = useState('');\n  const [todoStatus, setTodoStatus] = useState('all');\n\n  const loadedTodos = async () => {\n    setAllTodos(await getTodos());\n  };\n\n  useEffect(() => {\n    loadedTodos();\n  }, []);\n\n  const visibleTodos = allTodos\n    .filter(todo => todo.title.toLowerCase().includes(query))\n    .filter(todo => {\n      switch (todoStatus) {\n        case 'active':\n          return !todo.completed;\n        case 'completed':\n          return todo.completed;\n        default:\n          return true;\n      }\n    });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onSetQuery={setQuery}\n                todoStatus={todoStatus}\n                onSetStatus={setTodoStatus}\n              />\n            </div>\n\n            <div className=\"block\">\n              {allTodos.length === 0 && (\n                <Loader />\n              )}\n\n              <TodoList\n                todos={visibleTodos}\n                selectedTodo={selectedTodo}\n                setSelectedTodo={setSelectedTodo}\n                onClose={setIsModalOpen}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && isModalOpen && (\n        <TodoModal\n          todo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n          onClose={setIsModalOpen}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}